<div class="container">
	<ul class="product-progress">
		<li><%= link_to 'Product', wizard_path(:product), class: 'progress-selected' %></li>
		<li><i class="fa fa-caret-right" aria-hidden="true"></i></li>
		<li><%= link_to 'Questions', wizard_path(:questions) %></li>
		<li><i class="fa fa-caret-right" aria-hidden="true"></i></li>
		<li><%= link_to 'Payment', wizard_path(:payment) %></li>
		<li><i class="fa fa-caret-right" aria-hidden="true"></i></li>
		<li><%= link_to 'Submit', wizard_path(:preview) %></li>
	</ul>

	<div class="subtitle">Tell us about your product</div>

	<%= form_for([@product, Upload.new], html: { multipart: true, class: "dropzone", :product_id => @product.id }) do |f|  %>
	  <div class="dz-message" data-dz-message>
	  	<span><i class="fa fa-upload fa-3x" aria-hidden="true"></i></span>
	  	<br /><br />
	  	<span>Drop files here or click to upload</span>
	  </div>
	  <!-- <div class="fallback">
	    <%= f.file_field :image %><br>
	    <%= f.submit "Upload" %>
	  </div> -->
	<% end %>

	<div class="form-wrapper" data-id=<%= @product.id %>>

		<%= simple_form_for @product, url: wizard_path, method: :put do |f| %>

			<div class="form-inputs">
				<%= f.input :name, placeholder: 'Product name' %>
				<%= f.input :description, placeholder: "Short description", as: :string %>
				<%= f.input :price, placeholder: "Price" %>
				<div id="price-dollar-sign">$</div>
				<%= f.input :rebate, placeholder: "Rebate" %>
				<div id="rebate-dollar-sign">$</div>
				<%= f.input :quantity, placeholder: "Product quantity" %>
				<%= f.input :story, placeholder: "Product story" %>
			</div>

			<div class="form-actions">
		    <%= f.button :submit, "Save and continue" %>
		  </div>
		<% end %>
	</div>
</div>

<script>
	$(document).ready(function(){

		// disable auto discover
		Dropzone.autoDiscover = false;

		// grap our upload form by its id
		$("#new_upload").dropzone({
			// restrict image size to a maximum 1MB
			maxFilesize: 1,
			// changed the passed param to one accepted by
			// our rails app
			paramName: "upload[image]",
			// show remove links on each image upload
			addRemoveLinks: true,
			// if the upload was successful
			success: function(file, response){
				// find the remove button link of the uploaded file and give it an id
				// based of the fileID response from the server
				$(file.previewTemplate).find('.dz-remove').attr('id', response.fileID);
				// add the dz-success class (the green tick sign)
				$(file.previewElement).addClass("dz-success");
			},
			//when the remove button is clicked
			removedfile: function(file){
				// grap the id of the uploaded file we set earlier
				var id = $(file.previewTemplate).find('.dz-remove').attr('id');
				console.log(id);
				var product_id = $('.dropzone').attr('product_id');
				// make a DELETE ajax request to delete the file
				$.ajax({
					type: 'DELETE',
					url: '/products/' + product_id + '/uploads/' + id,
					success: function(data){
						console.log(data.message);
						file.previewElement.remove();
					}
				});
			},

			init: function () {
		    this.on('maxfilesexceeded', function (file) {
	        this.removeAllFiles();
	        this.addFile(file);
		    });

	     	<% for upload in @product.uploads %>
			
	     		mock = { name: "<%= upload.image.original_filename %>", size: <%= upload.image_file_size %> };
	        mock.accepted = true;

	        this.files.push(mock);
	        this.emit('addedfile', mock);
	        this.createThumbnailFromUrl(mock, "<%= upload.image.url %>");
	        this.emit('complete', mock);
	        $(mock.previewTemplate).find('.dz-remove').attr('id', <%= upload.id %>);
	      <% end %>
			}
		});	
	});
</script>